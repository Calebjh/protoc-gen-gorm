// Code generated by protoc-gen-go. DO NOT EDIT.
// source: example/feature_demo/test.proto

/*
Package example is a generated protocol buffer package.

It is generated from these files:
	example/feature_demo/test.proto
	example/feature_demo/test2.proto

It has these top-level messages:
	TestTypes
	TypeWithID
	MultitenantTypeWithID
	MultitenantTypeWithoutID
	APIOnlyType
	TypeBecomesEmpty
	IntPoint
	CreateIntPointRequest
	CreateIntPointResponse
	ReadIntPointRequest
	ReadIntPointResponse
	UpdateIntPointRequest
	UpdateIntPointResponse
	DeleteIntPointRequest
	ListIntPointResponse
	Something
*/
package example

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/infobloxopen/protoc-gen-gorm/options"
import gormable_types "github.com/infobloxopen/protoc-gen-gorm/types"
import google_protobuf1 "github.com/golang/protobuf/ptypes/wrappers"
import google_protobuf2 "github.com/golang/protobuf/ptypes/empty"
import google_protobuf3 "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TestTypesStatus int32

const (
	TestTypes_UNKNOWN TestTypesStatus = 0
	TestTypes_GOOD    TestTypesStatus = 1
	TestTypes_BAD     TestTypesStatus = 2
)

var TestTypesStatus_name = map[int32]string{
	0: "UNKNOWN",
	1: "GOOD",
	2: "BAD",
}
var TestTypesStatus_value = map[string]int32{
	"UNKNOWN": 0,
	"GOOD":    1,
	"BAD":     2,
}

func (x TestTypesStatus) String() string {
	return proto.EnumName(TestTypesStatus_name, int32(x))
}
func (TestTypesStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

// test_types is a message that serves as an example
type TestTypes struct {
	ApiOnlyString  string                        `protobuf:"bytes,1,opt,name=api_only_string,json=apiOnlyString" json:"api_only_string,omitempty"`
	Numbers        []int32                       `protobuf:"varint,2,rep,packed,name=numbers" json:"numbers,omitempty"`
	OptionalString *google_protobuf1.StringValue `protobuf:"bytes,3,opt,name=optional_string,json=optionalString" json:"optional_string,omitempty"`
	BecomesInt     TestTypesStatus               `protobuf:"varint,4,opt,name=becomes_int,json=becomesInt,enum=example.TestTypesStatus" json:"becomes_int,omitempty"`
	Nothingness    *google_protobuf2.Empty       `protobuf:"bytes,5,opt,name=nothingness" json:"nothingness,omitempty"`
	Uuid           *gormable_types.UUIDValue     `protobuf:"bytes,6,opt,name=uuid" json:"uuid,omitempty"`
	CreatedAt      *google_protobuf3.Timestamp   `protobuf:"bytes,7,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	TypeWithIDId   uint32                        `protobuf:"varint,8,opt,name=TypeWithID_id,json=TypeWithIDId" json:"TypeWithID_id,omitempty"`
}

func (m *TestTypes) Reset()                    { *m = TestTypes{} }
func (m *TestTypes) String() string            { return proto.CompactTextString(m) }
func (*TestTypes) ProtoMessage()               {}
func (*TestTypes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *TestTypes) GetApiOnlyString() string {
	if m != nil {
		return m.ApiOnlyString
	}
	return ""
}

func (m *TestTypes) GetNumbers() []int32 {
	if m != nil {
		return m.Numbers
	}
	return nil
}

func (m *TestTypes) GetOptionalString() *google_protobuf1.StringValue {
	if m != nil {
		return m.OptionalString
	}
	return nil
}

func (m *TestTypes) GetBecomesInt() TestTypesStatus {
	if m != nil {
		return m.BecomesInt
	}
	return TestTypes_UNKNOWN
}

func (m *TestTypes) GetNothingness() *google_protobuf2.Empty {
	if m != nil {
		return m.Nothingness
	}
	return nil
}

func (m *TestTypes) GetUuid() *gormable_types.UUIDValue {
	if m != nil {
		return m.Uuid
	}
	return nil
}

func (m *TestTypes) GetCreatedAt() *google_protobuf3.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *TestTypes) GetTypeWithIDId() uint32 {
	if m != nil {
		return m.TypeWithIDId
	}
	return 0
}

type TypeWithID struct {
	Ip            string       `protobuf:"bytes,1,opt,name=ip" json:"ip,omitempty"`
	Things        []*TestTypes `protobuf:"bytes,3,rep,name=things" json:"things,omitempty"`
	ANestedObject *TestTypes   `protobuf:"bytes,4,opt,name=a_nested_object,json=aNestedObject" json:"a_nested_object,omitempty"`
	Id            uint32       `protobuf:"varint,5,opt,name=id" json:"id,omitempty"`
}

func (m *TypeWithID) Reset()                    { *m = TypeWithID{} }
func (m *TypeWithID) String() string            { return proto.CompactTextString(m) }
func (*TypeWithID) ProtoMessage()               {}
func (*TypeWithID) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *TypeWithID) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *TypeWithID) GetThings() []*TestTypes {
	if m != nil {
		return m.Things
	}
	return nil
}

func (m *TypeWithID) GetANestedObject() *TestTypes {
	if m != nil {
		return m.ANestedObject
	}
	return nil
}

func (m *TypeWithID) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MultitenantTypeWithID struct {
	Id        uint64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	SomeField string `protobuf:"bytes,2,opt,name=some_field,json=someField" json:"some_field,omitempty"`
}

func (m *MultitenantTypeWithID) Reset()                    { *m = MultitenantTypeWithID{} }
func (m *MultitenantTypeWithID) String() string            { return proto.CompactTextString(m) }
func (*MultitenantTypeWithID) ProtoMessage()               {}
func (*MultitenantTypeWithID) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *MultitenantTypeWithID) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MultitenantTypeWithID) GetSomeField() string {
	if m != nil {
		return m.SomeField
	}
	return ""
}

type MultitenantTypeWithoutID struct {
	SomeField string `protobuf:"bytes,1,opt,name=some_field,json=someField" json:"some_field,omitempty"`
}

func (m *MultitenantTypeWithoutID) Reset()                    { *m = MultitenantTypeWithoutID{} }
func (m *MultitenantTypeWithoutID) String() string            { return proto.CompactTextString(m) }
func (*MultitenantTypeWithoutID) ProtoMessage()               {}
func (*MultitenantTypeWithoutID) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *MultitenantTypeWithoutID) GetSomeField() string {
	if m != nil {
		return m.SomeField
	}
	return ""
}

type APIOnlyType struct {
	Contents string `protobuf:"bytes,1,opt,name=contents" json:"contents,omitempty"`
}

func (m *APIOnlyType) Reset()                    { *m = APIOnlyType{} }
func (m *APIOnlyType) String() string            { return proto.CompactTextString(m) }
func (*APIOnlyType) ProtoMessage()               {}
func (*APIOnlyType) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *APIOnlyType) GetContents() string {
	if m != nil {
		return m.Contents
	}
	return ""
}

type TypeBecomesEmpty struct {
	AThing *APIOnlyType `protobuf:"bytes,1,opt,name=a_thing,json=aThing" json:"a_thing,omitempty"`
}

func (m *TypeBecomesEmpty) Reset()                    { *m = TypeBecomesEmpty{} }
func (m *TypeBecomesEmpty) String() string            { return proto.CompactTextString(m) }
func (*TypeBecomesEmpty) ProtoMessage()               {}
func (*TypeBecomesEmpty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *TypeBecomesEmpty) GetAThing() *APIOnlyType {
	if m != nil {
		return m.AThing
	}
	return nil
}

func init() {
	proto.RegisterType((*TestTypes)(nil), "example.TestTypes")
	proto.RegisterType((*TypeWithID)(nil), "example.TypeWithID")
	proto.RegisterType((*MultitenantTypeWithID)(nil), "example.MultitenantTypeWithID")
	proto.RegisterType((*MultitenantTypeWithoutID)(nil), "example.MultitenantTypeWithoutID")
	proto.RegisterType((*APIOnlyType)(nil), "example.APIOnlyType")
	proto.RegisterType((*TypeBecomesEmpty)(nil), "example.TypeBecomesEmpty")
	proto.RegisterEnum("example.TestTypesStatus", TestTypesStatus_name, TestTypesStatus_value)
}

func init() { proto.RegisterFile("example/feature_demo/test.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 722 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x94, 0xdd, 0x6e, 0xe3, 0x44,
	0x14, 0xc7, 0xb1, 0x93, 0x26, 0xce, 0x31, 0xf9, 0xd0, 0xb0, 0x20, 0x27, 0x7c, 0x6c, 0x30, 0x20,
	0x65, 0x91, 0xe2, 0x48, 0xd9, 0x1b, 0xd6, 0x5c, 0x35, 0x64, 0x17, 0x45, 0x88, 0x64, 0x65, 0x52,
	0x56, 0xe2, 0xc6, 0x1a, 0xc7, 0x13, 0x77, 0xc0, 0x9e, 0xb1, 0x3c, 0x63, 0xd1, 0x3c, 0x5a, 0xf2,
	0x1e, 0xdc, 0xf3, 0x28, 0x68, 0xc6, 0x4e, 0x5b, 0xb5, 0x45, 0xea, 0x8d, 0xa5, 0x99, 0xf3, 0x3b,
	0xff, 0x73, 0xce, 0xff, 0xd8, 0x86, 0x97, 0xe4, 0x06, 0x67, 0x79, 0x4a, 0x66, 0x7b, 0x82, 0x65,
	0x59, 0x90, 0x30, 0x26, 0x19, 0x9f, 0x49, 0x22, 0xa4, 0x97, 0x17, 0x5c, 0x72, 0xd4, 0xae, 0x81,
	0x91, 0x9f, 0x50, 0x79, 0x5d, 0x46, 0xde, 0x8e, 0x67, 0x33, 0xca, 0xf6, 0x3c, 0x4a, 0xf9, 0x0d,
	0xcf, 0x09, 0x9b, 0x69, 0x6e, 0x37, 0x4d, 0x08, 0x9b, 0x26, 0xbc, 0xc8, 0x66, 0x3c, 0x97, 0x94,
	0x33, 0x31, 0x53, 0x87, 0x4a, 0x64, 0xf4, 0xe6, 0xb9, 0xb9, 0xf2, 0x90, 0x13, 0x51, 0x3d, 0xeb,
	0xd4, 0xaf, 0x12, 0xce, 0x93, 0x94, 0x54, 0x64, 0x54, 0xee, 0x67, 0x7f, 0x17, 0x38, 0xcf, 0x49,
	0x71, 0x8e, 0x7f, 0xfe, 0x30, 0x4e, 0xb2, 0x5c, 0x1e, 0xea, 0xe0, 0xcb, 0x87, 0x41, 0x49, 0x33,
	0x22, 0x24, 0xce, 0xf2, 0x0a, 0x70, 0xff, 0x6d, 0x40, 0x67, 0x4b, 0x84, 0xdc, 0xaa, 0x8a, 0xc8,
	0x83, 0x3e, 0xce, 0x69, 0xc8, 0x59, 0x7a, 0x08, 0x85, 0x2c, 0x28, 0x4b, 0x1c, 0x63, 0x6c, 0x4c,
	0x3a, 0x8b, 0xd6, 0xe9, 0x38, 0x34, 0x07, 0x46, 0xd0, 0xc5, 0x39, 0xdd, 0xb0, 0xf4, 0xf0, 0x9b,
	0x0e, 0x22, 0x07, 0xda, 0xac, 0xcc, 0x22, 0x52, 0x08, 0xc7, 0x1c, 0x37, 0x26, 0x17, 0xc1, 0xf9,
	0x88, 0xde, 0x42, 0xbf, 0xb2, 0x01, 0xa7, 0x67, 0xa5, 0xc6, 0xd8, 0x98, 0xd8, 0xf3, 0x2f, 0xbc,
	0xaa, 0x25, 0xef, 0xdc, 0x92, 0x57, 0x69, 0xfd, 0x8e, 0xd3, 0x92, 0x04, 0xbd, 0x73, 0x52, 0x5d,
	0xc0, 0x07, 0x3b, 0x22, 0x3b, 0x9e, 0x11, 0x11, 0x52, 0x26, 0x9d, 0xe6, 0xd8, 0x98, 0xf4, 0xe6,
	0x43, 0xaf, 0x5e, 0x89, 0x77, 0xdb, 0xb9, 0x27, 0x24, 0x96, 0xa5, 0x08, 0xa0, 0xa6, 0x57, 0x4c,
	0xa2, 0x1f, 0xc0, 0x66, 0x5c, 0x5e, 0x53, 0x96, 0x30, 0x22, 0x84, 0x73, 0xa1, 0xcb, 0x7f, 0xf6,
	0xa8, 0xfc, 0x5b, 0x65, 0x57, 0x70, 0x1f, 0x45, 0x53, 0x68, 0x96, 0x25, 0x8d, 0x9d, 0x96, 0x4e,
	0x19, 0x7a, 0x6a, 0x33, 0x38, 0x4a, 0x49, 0x58, 0xed, 0xe5, 0xea, 0x6a, 0xb5, 0xac, 0xda, 0xd5,
	0x18, 0x7a, 0x03, 0xb0, 0x2b, 0x08, 0x96, 0x24, 0x0e, 0xb1, 0x74, 0xda, 0x3a, 0x69, 0xf4, 0xa8,
	0xce, 0xf6, 0xec, 0x7c, 0xd0, 0xa9, 0xe9, 0x4b, 0x89, 0xbe, 0x81, 0xae, 0xea, 0xff, 0x03, 0x95,
	0xd7, 0xab, 0x65, 0x48, 0x63, 0xc7, 0x1a, 0x1b, 0x93, 0x6e, 0xf0, 0xf1, 0xdd, 0xe5, 0x2a, 0x76,
	0x27, 0xd0, 0xaa, 0xc6, 0x43, 0x36, 0xb4, 0xaf, 0xd6, 0xbf, 0xac, 0x37, 0x1f, 0xd6, 0x83, 0x8f,
	0x90, 0x05, 0xcd, 0x9f, 0x37, 0x9b, 0xe5, 0xc0, 0x40, 0x6d, 0x68, 0x2c, 0x2e, 0x97, 0x03, 0xd3,
	0xff, 0xe4, 0x74, 0x1c, 0xf6, 0x2d, 0x63, 0x64, 0x8b, 0x8c, 0x17, 0x09, 0x16, 0x11, 0x2f, 0x62,
	0xf7, 0x1f, 0x03, 0xe0, 0x4e, 0x0f, 0x7d, 0x0b, 0x26, 0xcd, 0xeb, 0xb5, 0xbe, 0x38, 0x1d, 0x87,
	0x03, 0xe8, 0xa9, 0xf9, 0x7c, 0x97, 0xe6, 0x21, 0x8e, 0xe3, 0xc2, 0x0d, 0x4c, 0x9a, 0xa3, 0xef,
	0xa1, 0xa5, 0xfd, 0x10, 0x4e, 0x63, 0xdc, 0x98, 0xd8, 0x73, 0xf4, 0xd8, 0xf3, 0xa0, 0x26, 0x90,
	0x0f, 0x7d, 0x1c, 0x32, 0x22, 0x94, 0x01, 0x3c, 0xfa, 0x93, 0xec, 0xaa, 0x45, 0x3d, 0x9d, 0xd4,
	0xc5, 0x6b, 0x4d, 0x6e, 0x34, 0x88, 0x7a, 0x60, 0xd2, 0x58, 0xef, 0xa6, 0x1b, 0x98, 0x34, 0xf6,
	0x5f, 0x9d, 0x8e, 0xc3, 0xef, 0x2c, 0x03, 0x7d, 0x0d, 0x17, 0x94, 0xc9, 0xd7, 0x73, 0xa4, 0x2d,
	0x1e, 0xa1, 0xaa, 0xc5, 0xbc, 0xa0, 0x19, 0x2e, 0x0e, 0xe1, 0x5f, 0xe4, 0xe0, 0xba, 0xef, 0xe1,
	0xd3, 0x5f, 0xcb, 0x54, 0x52, 0x49, 0x18, 0x66, 0xf2, 0xde, 0x84, 0x95, 0xa6, 0x9a, 0xb0, 0xa9,
	0x34, 0xd1, 0x97, 0x00, 0x82, 0x67, 0x24, 0xdc, 0x53, 0x92, 0xc6, 0x8e, 0xa9, 0x26, 0x0f, 0x3a,
	0xea, 0xe6, 0x9d, 0xba, 0xf0, 0xad, 0xd3, 0x71, 0xd8, 0xb4, 0x8c, 0xb1, 0xe1, 0xfe, 0x04, 0xce,
	0x13, 0x8a, 0xbc, 0x94, 0xab, 0xe5, 0x03, 0x11, 0xe3, 0xff, 0x45, 0x5e, 0x81, 0x7d, 0xf9, 0x7e,
	0xa5, 0x3e, 0x12, 0x25, 0x80, 0x46, 0x60, 0xed, 0x38, 0x93, 0x84, 0x49, 0x51, 0x67, 0xdd, 0x9e,
	0xdd, 0x15, 0x0c, 0x14, 0xb3, 0xa8, 0xde, 0x59, 0xfd, 0x22, 0xa2, 0x29, 0xb4, 0x71, 0xa8, 0x8d,
	0xd5, 0xb8, 0x3d, 0x7f, 0x71, 0x6b, 0xe2, 0x3d, 0xd9, 0xa0, 0x85, 0xb7, 0x8a, 0xf1, 0xf5, 0x87,
	0x69, 0x19, 0x8b, 0x77, 0x7f, 0x2c, 0x9f, 0xfb, 0x8b, 0x79, 0xea, 0x87, 0xf7, 0x63, 0x7d, 0x19,
	0xb5, 0x34, 0xfd, 0xfa, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x4a, 0x5b, 0xf3, 0xe2, 0x17, 0x05,
	0x00, 0x00,
}
